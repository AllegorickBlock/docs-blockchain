import{_ as s,c as a,o as n,L as e}from"./chunks/framework.EMf-NuUT.js";const u=JSON.parse('{"title":"Detecting the Blockchain Network","description":"","frontmatter":{"title":"Detecting the Blockchain Network","order":5,"outline":[0,4]},"headers":[],"relativePath":"products/ultra-wallet/detect-blockchain-network.md","filePath":"products/ultra-wallet/detect-blockchain-network.md","lastUpdated":null}'),t={name:"products/ultra-wallet/detect-blockchain-network.md"},o=e(`<h1 id="detecting-the-blockchain-network" tabindex="-1">Detecting the Blockchain Network <a class="header-anchor" href="#detecting-the-blockchain-network" aria-label="Permalink to &quot;Detecting the Blockchain Network&quot;">â€‹</a></h1><p>The Ultra blockchain is distinguished by a unique identifier that facilitates the identification of the associated blockchain network. This essential information can be retrieved through the Wallet extension using the following method.</p><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">response</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> ultra.</span><span style="color:#B392F0;">getChainId</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    response.data;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// a9c481dfbc7d9506dc7e87e9a137c931b0a9303f64fd7a1d08b8230133920097</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// { status: &quot;error&quot; }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">response</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> ultra.</span><span style="color:#6F42C1;">getChainId</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    response.data;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// a9c481dfbc7d9506dc7e87e9a137c931b0a9303f64fd7a1d08b8230133920097</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// { status: &quot;error&quot; }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>For more information visit the <a href="./../../products/chain-api/">List of official Ultra blockchain networks</a></p>`,4),l=[o];function p(c,r,i,d,h,E){return n(),a("div",null,l)}const k=s(t,[["render",p]]);export{u as __pageData,k as default};
