import{_ as s,v as e,b as a,R as n}from"./chunks/framework.a49639fc.js";const D=JSON.parse('{"title":"Signing a Message","description":"","frontmatter":{"title":"Signing a Message","deploy":["staging","mainnet"],"order":7,"outline":[0,4]},"headers":[],"relativePath":"guides/Wallet Extension/signing_message.md","filePath":"guides/Wallet Extension/signing_message.md","lastUpdated":1690898169000}'),o={name:"guides/Wallet Extension/signing_message.md"},t=n(`<h1 id="signing-a-message" tabindex="-1">Signing a Message <a class="header-anchor" href="#signing-a-message" aria-label="Permalink to &quot;Signing a Message&quot;">â€‹</a></h1><p>In some cases, a web application can also request the user to sign a given message to verify the ownership of a blockchain account. Applications are free to write their messages which will be displayed to users from within the Ultra Wallet&#39;s signature prompt using the method <code>signMessage()</code>. These messages should have one of the next prefixes: <code>0x</code>, <code>UOSx</code>, or <code>message:</code>.</p><p>Message signatures do not involve network fees.</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ultra</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">signMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message:This is a test message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signature</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// SIG_K1_KXuKhsxcdDTKuMbo2kveKsggwUfV9p5FuPsirkFcjjQo2sxUvxcc1TEnkoancsWTf6SEHj1jMjB9e6GuRkg6ZrEvV5tHa8</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;"> (err) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// { status: &quot;error&quot;, message: &quot;Transaction declined&quot; }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>If the user declines the message signing or closes the window, the Promise will return an error.</p>`,5),l=[t];function p(i,r,c,g,y,d){return e(),a("div",null,l)}const u=s(o,[["render",p]]);export{D as __pageData,u as default};
