import{_ as e,c as t,o as a,V as s}from"./chunks/framework.f1490fb9.js";const n="/experimental/images/transaction-queue.jpg",y=JSON.parse('{"title":"Transaction Limits","description":"","frontmatter":{"title":"Transaction Limits","deploy":["staging","mainnet"],"outline":[0,4],"order":-96},"headers":[],"relativePath":"learn/Ultra Blockchain/transaction-limits-queues.md","lastUpdated":1686238554000}'),o={name:"learn/Ultra Blockchain/transaction-limits-queues.md"},i=s('<h1 id="transaction-limits-and-queue-mechanism" tabindex="-1">Transaction Limits and Queue Mechanism <a class="header-anchor" href="#transaction-limits-and-queue-mechanism" aria-label="Permalink to &quot;Transaction Limits and Queue Mechanism&quot;">​</a></h1><p>Ultra’s network provides its users and developers with free transactions.</p><p>Ultra has developed a unique queuing mechanism that helps prioritize the large number of transactions that go through the network. This queue also helps deal with potential abusers of the network by eventually de-prioritizing any entity which attempts to flood the network.</p><p><img src="'+n+'" alt=""></p><p>Users who have not staked can perform transactions, with their weighting within the prioritized Queue moving down for each transaction. This weight decays with time, ensuring that a user who depleted his position within the queue regains it over time.</p><p>Developers who consistently require priority within the queue can stake to the network.</p><h2 id="toggleable-algorithm" tabindex="-1">Toggleable Algorithm <a class="header-anchor" href="#toggleable-algorithm" aria-label="Permalink to &quot;Toggleable Algorithm&quot;">​</a></h2><p>Ultra provides a consistent approach for executing transactions which were added to the queue by prioritizing them based on the POWER. Based on the ranking algorithm specified by <code>setrankingalgo</code>.</p><p><em>Keep in mind that only <strong>Ultra</strong> has the authority to perform these actions.</em></p><p><strong>Rank based on ratio of available POWER</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cleos push action eosio setrankalgo </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[0]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p eosio</span></span></code></pre></div><p><strong>Rank based on the delta between POWER quota and POWER usage</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cleos push action eosio setrankalgo </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[1]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">p eosio</span></span></code></pre></div>',13),r=[i];function l(p,c,h,d,u,g){return a(),t("div",null,r)}const _=e(o,[["render",l]]);export{y as __pageData,_ as default};
